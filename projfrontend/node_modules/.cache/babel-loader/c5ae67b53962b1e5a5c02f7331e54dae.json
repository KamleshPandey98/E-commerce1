{"ast":null,"code":"var _jsxFileName = \"/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/user/Signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signin, authenticate, isAuthenticated } from \"../auth/helper\";\nimport { cPrint } from \"../backend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signin = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n  const {\n    email,\n    password,\n    error,\n    loading,\n    didRedirect\n  } = values;\n  const {\n    user\n  } = isAuthenticated();\n\n  const onHandleInputChange = fieldName => event => {\n    event.preventDefault();\n    setValues({ ...values,\n      [fieldName]: event.target.value\n    });\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: \"\",\n      loading: true\n    });\n    await signin({\n      email,\n      password\n    }).then(data => {\n      if (data.hasOwnProperty(\"error\")) {\n        cPrint(\"inn\");\n        setValues({ ...values,\n          error: data.error,\n          loading: false\n        });\n      } else {\n        authenticate(data, () => {\n          setValues({ ...values,\n            error: \"\",\n            didRedirect: true\n          });\n        });\n      }\n    }).catch(console.log(\"Sign in request failed.\"));\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"redirect to admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"redirect to user dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this);\n      }\n    }\n\n    if (isAuthenticated()) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const signInForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: email,\n              onChange: onHandleInputChange(\"email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: password,\n              onChange: onHandleInputChange(\"password\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              onClick: onSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"Signin Page\",\n    description: \"A Page for user to sign in !\",\n    children: [signInForm(), performRedirect, /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white text-center\",\n      children: JSON.stringify(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signin, \"htkJvGsUnevxi3CUY3xWFcPzpwY=\");\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/user/Signin.js"],"names":["React","useState","Base","Link","Redirect","signin","authenticate","isAuthenticated","cPrint","Signin","values","setValues","email","password","error","loading","didRedirect","user","onHandleInputChange","fieldName","event","preventDefault","target","value","onSubmit","then","data","hasOwnProperty","catch","console","log","performRedirect","role","signInForm","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signin, authenticate, isAuthenticated } from \"../auth/helper\";\nimport { cPrint } from \"../backend\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false,\n  });\n\n  const { email, password, error, loading, didRedirect } = values;\n  const { user } = isAuthenticated();\n\n  const onHandleInputChange = (fieldName) => (event) => {\n    event.preventDefault();\n    setValues({ ...values, [fieldName]: event.target.value });\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    await signin({ email, password })\n      .then((data) => {\n        if (data.hasOwnProperty(\"error\")) {\n          cPrint(\"inn\");\n          setValues({\n            ...values,\n            error: data.error,\n            loading: false,\n          });\n        } else {\n          authenticate(data, () => {\n            setValues({ ...values, error: \"\", didRedirect: true });\n          });\n        }\n      })\n      .catch(console.log(\"Sign in request failed.\"));\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <p>redirect to admin</p>;\n      } else {\n        return <p>redirect to user dashboard</p>;\n      }\n    }\n    if (isAuthenticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form className=\"my-2\">\n            <div className=\"form-group mb-2\">\n              <label className=\"text-light\">Email</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={email}\n                onChange={onHandleInputChange(\"email\")}\n              />\n            </div>\n\n            <div className=\"form-group mb-2\">\n              <label className=\"text-light\">Password</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={password}\n                onChange={onHandleInputChange(\"password\")}\n              />\n            </div>\n\n            <div className=\"d-grid\">\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={onSubmit}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Signin Page\" description=\"A Page for user to sign in !\">\n      {signInForm()}\n      {performRedirect}\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}