{"ast":null,"code":"import { toast } from \"react-toastify\";\nexport const handleToast = (boolsuccess, errMsg, errorType) => {\n  //   toast.dismiss();\n  switch (true) {\n    case toast.TYPE.ERROR === errorType:\n      showErrorToast(boolsuccess, errMsg);\n      break;\n\n    case toast.TYPE.SUCCESS === errorType:\n      showSuccessToast(boolsuccess, errMsg);\n      break;\n\n    case toast.TYPE.WARNING === errorType:\n      showWarningToast(boolsuccess, errMsg);\n      break;\n\n    default:\n      break;\n  }\n};\n\nconst showErrorToast = (boolSuccess, errMsg) => {\n  toast.error(errMsg);\n};\n\nconst showSuccessToast = (boolSuccess, errMsg) => {\n  toast.success(errMsg);\n};\n\nconst showWarningToast = (boolSuccess, errMsg) => {\n  toast.warning(errMsg);\n}; // class ToastTypes {\n//   static warning= \"warning\";\n// }","map":{"version":3,"sources":["/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/reusables/HandleToast.js"],"names":["toast","handleToast","boolsuccess","errMsg","errorType","TYPE","ERROR","showErrorToast","SUCCESS","showSuccessToast","WARNING","showWarningToast","boolSuccess","error","success","warning"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,WAAD,EAAcC,MAAd,EAAsBC,SAAtB,KAAoC;AAC7D;AACA,UAAQ,IAAR;AACE,SAAKJ,KAAK,CAACK,IAAN,CAAWC,KAAX,KAAqBF,SAA1B;AACEG,MAAAA,cAAc,CAACL,WAAD,EAAcC,MAAd,CAAd;AACA;;AACF,SAAKH,KAAK,CAACK,IAAN,CAAWG,OAAX,KAAuBJ,SAA5B;AACEK,MAAAA,gBAAgB,CAACP,WAAD,EAAcC,MAAd,CAAhB;AACA;;AACF,SAAKH,KAAK,CAACK,IAAN,CAAWK,OAAX,KAAuBN,SAA5B;AACEO,MAAAA,gBAAgB,CAACT,WAAD,EAAcC,MAAd,CAAhB;AACA;;AAEF;AACE;AAZJ;AAcD,CAhBM;;AAkBP,MAAMI,cAAc,GAAG,CAACK,WAAD,EAAcT,MAAd,KAAyB;AAC9CH,EAAAA,KAAK,CAACa,KAAN,CAAYV,MAAZ;AACD,CAFD;;AAIA,MAAMM,gBAAgB,GAAG,CAACG,WAAD,EAAcT,MAAd,KAAyB;AAChDH,EAAAA,KAAK,CAACc,OAAN,CAAcX,MAAd;AACD,CAFD;;AAIA,MAAMQ,gBAAgB,GAAG,CAACC,WAAD,EAAcT,MAAd,KAAyB;AAChDH,EAAAA,KAAK,CAACe,OAAN,CAAcZ,MAAd;AACD,CAFD,C,CAIA;AACA;AACA","sourcesContent":["import { toast } from \"react-toastify\";\n\nexport const handleToast = (boolsuccess, errMsg, errorType) => {\n  //   toast.dismiss();\n  switch (true) {\n    case toast.TYPE.ERROR === errorType:\n      showErrorToast(boolsuccess, errMsg);\n      break;\n    case toast.TYPE.SUCCESS === errorType:\n      showSuccessToast(boolsuccess, errMsg);\n      break;\n    case toast.TYPE.WARNING === errorType:\n      showWarningToast(boolsuccess, errMsg);\n      break;\n\n    default:\n      break;\n  }\n};\n\nconst showErrorToast = (boolSuccess, errMsg) => {\n  toast.error(errMsg);\n};\n\nconst showSuccessToast = (boolSuccess, errMsg) => {\n  toast.success(errMsg);\n};\n\nconst showWarningToast = (boolSuccess, errMsg) => {\n  toast.warning(errMsg);\n};\n\n// class ToastTypes {\n//   static warning= \"warning\";\n// }\n"]},"metadata":{},"sourceType":"module"}