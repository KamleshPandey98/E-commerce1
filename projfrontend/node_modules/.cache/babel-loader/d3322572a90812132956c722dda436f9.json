{"ast":null,"code":"var _jsxFileName = \"/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/user/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"../auth/helper\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { cPrint } from \"../backend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: false\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    success\n  } = values;\n\n  const handleChange = fieldName => event => {\n    event.preventDefault(event.target.value);\n    setValues({ ...values,\n      [fieldName]: event.target.value\n    });\n  };\n\n  const [toastHanlder, setToastHandler] = useState();\n\n  const toastHandlerfunc = () => {\n    if (values.success) {\n      setToastHandler(toast.success(\"User successfully saved.\"));\n      return /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    } else if (values.error) {\n      setToastHandler(toast.error(error));\n      return /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    } else {\n      setToastHandler(toast.error(\"error\"));\n      return /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    }\n  }; // const handleShowToast = useMemo(function showToast() {\n  // if (success) {\n  //   toast.success(\"User successfully saved.\");\n  //   return <ToastContainer />;\n  // } else if (error) {\n  //   toast.error(error);\n  //   return <ToastContainer />;\n  // } else {\n  //   toast.error(\"error\");\n  //   return <ToastContainer />;\n  // }\n  // });\n\n\n  const onSubmit = async () => {\n    // cPrint(\"KAMLESH\");\n    // setValues({ ...values, error: false });\n    await signup({\n      name,\n      email,\n      password\n    }).then(data => {\n      cPrint(data);\n\n      if (data.error) {\n        setValues({ ...values,\n          error: data.msg,\n          success: false\n        });\n        console.log(\"call\");\n        cPrint(values);\n      } else {\n        setValues({ ...values,\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          error: \"\",\n          success: true\n        });\n      }\n    }).then(v => {\n      cPrint(\"here\"); // cPrint(success);\n\n      cPrint(error);\n      cPrint(v); // if (success) {\n      //   toast.success(\"User successfully saved.\");\n      // } else if (error) {\n      //   toast.error(error);\n      // } else {\n      //   toast.error(\"error\");\n      // }\n    }).catch(console.log(\"Error in signup\"));\n  };\n\n  const signUpForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              onChange: handleChange(\"name\"),\n              value: name,\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              onChange: handleChange(\"email\"),\n              value: email,\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              onChange: handleChange(\"password\"),\n              value: password,\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              onClick: onSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"Sign Up Page\",\n    description: \"A Page for user to sign up !\",\n    children: [toastHanlder, signUpForm(), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white text-center\",\n      children: JSON.stringify(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"s0C/JKhNYnkuEyAvAFyWn+xtLQI=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/user/Signup.js"],"names":["React","useMemo","useState","Base","Link","signup","ToastContainer","toast","cPrint","Signup","values","setValues","name","email","password","error","success","handleChange","fieldName","event","preventDefault","target","value","toastHanlder","setToastHandler","toastHandlerfunc","onSubmit","then","data","msg","console","log","v","catch","signUpForm","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"../auth/helper\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { cPrint } from \"../backend\";\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: false,\n  });\n\n  const { name, email, password, error, success } = values;\n\n  const handleChange = (fieldName) => (event) => {\n    event.preventDefault(event.target.value);\n    setValues({ ...values, [fieldName]: event.target.value });\n  };\n\n  const [toastHanlder, setToastHandler] = useState();\n\n  const toastHandlerfunc = () => {\n    if (values.success) {\n      setToastHandler(toast.success(\"User successfully saved.\"));\n      return <ToastContainer />;\n    } else if (values.error) {\n      setToastHandler(toast.error(error));\n      return <ToastContainer />;\n    } else {\n      setToastHandler(toast.error(\"error\"));\n      return <ToastContainer />;\n    }\n  };\n\n  // const handleShowToast = useMemo(function showToast() {\n  // if (success) {\n  //   toast.success(\"User successfully saved.\");\n  //   return <ToastContainer />;\n  // } else if (error) {\n  //   toast.error(error);\n  //   return <ToastContainer />;\n  // } else {\n  //   toast.error(\"error\");\n  //   return <ToastContainer />;\n  // }\n  // });\n\n  const onSubmit = async () => {\n    // cPrint(\"KAMLESH\");\n    // setValues({ ...values, error: false });\n    await signup({ name, email, password })\n      .then((data) => {\n        cPrint(data);\n        if (data.error) {\n          setValues({\n            ...values,\n            error: data.msg,\n            success: false,\n          });\n          console.log(\"call\");\n          cPrint(values);\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            error: \"\",\n            success: true,\n          });\n        }\n      })\n      .then((v) => {\n        cPrint(\"here\");\n        // cPrint(success);\n        cPrint(error);\n        cPrint(v);\n        // if (success) {\n        //   toast.success(\"User successfully saved.\");\n        // } else if (error) {\n        //   toast.error(error);\n        // } else {\n        //   toast.error(\"error\");\n        // }\n      })\n      .catch(console.log(\"Error in signup\"));\n  };\n\n  const signUpForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form className=\"my-2\">\n            <div className=\"form-group mb-2\">\n              <label className=\"text-light\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={handleChange(\"name\")}\n                value={name}\n                name=\"name\"\n              />\n            </div>\n\n            <div className=\"form-group mb-2\">\n              <label className=\"text-light\">Email</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={handleChange(\"email\")}\n                value={email}\n                name=\"email\"\n              />\n            </div>\n\n            <div className=\"form-group mb-2\">\n              <label className=\"text-light\">Password</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={handleChange(\"password\")}\n                value={password}\n                name=\"password\"\n              />\n            </div>\n\n            <div className=\"d-grid\">\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={onSubmit}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign Up Page\" description=\"A Page for user to sign up !\">\n      {/* <h1>Signup Works</h1> */}\n      {/* {handleShowToast} */}\n      {toastHanlder}\n      {/* <ToastContainer /> */}\n      {signUpForm()}\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}