{"ast":null,"code":"import { toast } from \"react-toastify\";\nexport const handleToast = ({\n  boolsuccess,\n  errMsg,\n  errorType\n}) => {\n  toast.dismiss();\n\n  switch (false) {\n    case toast.TYPE.ERROR == errorType:\n      showErrorToast(boolsuccess, errorMsg);\n      break;\n\n    case toast.TYPE.SUCCESS == errorType:\n      showSuccessToast(boolsuccess, errorMsg);\n      break;\n\n    case toast.TYPE.WARNING == errorType:\n      showWarningToast(boolsuccess, errorMsg);\n      break;\n\n    default:\n      break;\n  }\n\n  if (boolsuccess) {// toast.success(onSuccessLoginNavigate);\n  } else if (errMsg) {\n    toast.error(errMsg);\n  } else {\n    toast.error(\"error\");\n  }\n};\n\nconst showErrorToast = (boolSuccess, errMsg) => {\n  toast.error(errMsg);\n};\n\nconst showSuccessToast = (boolSuccess, errMsg) => {\n  toast.success(errMsg);\n};\n\nconst showWarningToast = (boolSuccess, errMsg) => {\n  toast.warning(errMsg);\n}; // class ToastTypes {\n//   static warning= \"warning\";\n// }","map":{"version":3,"sources":["/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/reusables/HandleToast.js"],"names":["toast","handleToast","boolsuccess","errMsg","errorType","dismiss","TYPE","ERROR","showErrorToast","errorMsg","SUCCESS","showSuccessToast","WARNING","showWarningToast","error","boolSuccess","success","warning"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAAD,KAAwC;AACjEJ,EAAAA,KAAK,CAACK,OAAN;;AACA,UAAQ,KAAR;AACE,SAAKL,KAAK,CAACM,IAAN,CAAWC,KAAX,IAAoBH,SAAzB;AACEI,MAAAA,cAAc,CAACN,WAAD,EAAcO,QAAd,CAAd;AACA;;AACF,SAAKT,KAAK,CAACM,IAAN,CAAWI,OAAX,IAAsBN,SAA3B;AACEO,MAAAA,gBAAgB,CAACT,WAAD,EAAcO,QAAd,CAAhB;AACA;;AACF,SAAKT,KAAK,CAACM,IAAN,CAAWM,OAAX,IAAsBR,SAA3B;AACES,MAAAA,gBAAgB,CAACX,WAAD,EAAcO,QAAd,CAAhB;AACA;;AAEF;AACE;AAZJ;;AAcA,MAAIP,WAAJ,EAAiB,CACf;AACD,GAFD,MAEO,IAAIC,MAAJ,EAAY;AACjBH,IAAAA,KAAK,CAACc,KAAN,CAAYX,MAAZ;AACD,GAFM,MAEA;AACLH,IAAAA,KAAK,CAACc,KAAN,CAAY,OAAZ;AACD;AACF,CAvBM;;AAyBP,MAAMN,cAAc,GAAG,CAACO,WAAD,EAAcZ,MAAd,KAAyB;AAC9CH,EAAAA,KAAK,CAACc,KAAN,CAAYX,MAAZ;AACD,CAFD;;AAIA,MAAMQ,gBAAgB,GAAG,CAACI,WAAD,EAAcZ,MAAd,KAAyB;AAChDH,EAAAA,KAAK,CAACgB,OAAN,CAAcb,MAAd;AACD,CAFD;;AAIA,MAAMU,gBAAgB,GAAG,CAACE,WAAD,EAAcZ,MAAd,KAAyB;AAChDH,EAAAA,KAAK,CAACiB,OAAN,CAAcd,MAAd;AACD,CAFD,C,CAIA;AACA;AACA","sourcesContent":["import { toast } from \"react-toastify\";\n\nexport const handleToast = ({ boolsuccess, errMsg, errorType }) => {\n  toast.dismiss();\n  switch (false) {\n    case toast.TYPE.ERROR == errorType:\n      showErrorToast(boolsuccess, errorMsg);\n      break;\n    case toast.TYPE.SUCCESS == errorType:\n      showSuccessToast(boolsuccess, errorMsg);\n      break;\n    case toast.TYPE.WARNING == errorType:\n      showWarningToast(boolsuccess, errorMsg);\n      break;\n\n    default:\n      break;\n  }\n  if (boolsuccess) {\n    // toast.success(onSuccessLoginNavigate);\n  } else if (errMsg) {\n    toast.error(errMsg);\n  } else {\n    toast.error(\"error\");\n  }\n};\n\nconst showErrorToast = (boolSuccess, errMsg) => {\n  toast.error(errMsg);\n};\n\nconst showSuccessToast = (boolSuccess, errMsg) => {\n  toast.success(errMsg);\n};\n\nconst showWarningToast = (boolSuccess, errMsg) => {\n  toast.warning(errMsg);\n};\n\n// class ToastTypes {\n//   static warning= \"warning\";\n// }\n"]},"metadata":{},"sourceType":"module"}