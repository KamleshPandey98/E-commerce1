{"ast":null,"code":"var _jsxFileName = \"/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/admin/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { getAllCategory, getProduct, updateProduct } from \"./helper/adminapicall\";\nimport { isAuthenticated } from \"../auth/helper/index\";\nimport ProductForm from \"./components/ProductForm\";\nimport BackToDashboard from \"./components/BackToDashboard\";\nimport { handleToast } from \"../reusables/HandleToast\"; // props.match.params.anyNameOfendPointUrl // as written in routes\n// match is by DEFAULT cannot be renamed\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = ({\n  match\n}) => {\n  _s();\n\n  const {\n    user,\n    token\n  } = isAuthenticated();\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  const preload = productId => {\n    getProduct(productId).then(data => {\n      //console.log(data);\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        preloadCategories();\n        setValues({ ...values,\n          name: data.name,\n          description: data.description,\n          price: data.price,\n          category: data.category._id,\n          stock: data.stock,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n\n  const preloadCategories = () => {\n    getAllCategory().then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({\n          categories: data,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload(match.params.productId);\n  }, []); //TODO: work on it\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: \"\",\n      loading: true\n    });\n    updateProduct(match.params.productId, user._id, token, formData).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n        handleToast(false, data.error, \"error\");\n      } else {\n        setValues({ ...values,\n          name: \"\",\n          description: \"\",\n          price: \"\",\n          photo: \"\",\n          stock: \"\",\n          loading: false,\n          createdProduct: data.name\n        });\n        handleToast(false, \"updated successfully\", \"success\");\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const successMessage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-success mt-3\",\n    style: {\n      display: createdProduct ? \"\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [createdProduct, \" created successfully\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"Add a product here!\",\n    description: \"Welcome to product creation section\",\n    className: \"container bg-info p-4\",\n    children: [BackToDashboard(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row bg-dark text-white rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 offset-md-2\",\n        children: [successMessage(), ProductForm({\n          values: values,\n          categories: categories,\n          handleChange: handleChange,\n          onSubmit: onSubmit\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProduct, \"adL+6q3ROykLYXX+XGgPTe4AXs0=\");\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/admin/UpdateProduct.js"],"names":["React","useState","useEffect","Base","Link","getAllCategory","getProduct","updateProduct","isAuthenticated","ProductForm","BackToDashboard","handleToast","UpdateProduct","match","user","token","values","setValues","name","description","price","stock","photo","categories","category","loading","error","createdProduct","getaRedirect","formData","preload","productId","then","data","preloadCategories","_id","FormData","params","onSubmit","event","preventDefault","handleChange","value","target","files","set","successMessage","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getAllCategory,\n  getProduct,\n  updateProduct,\n} from \"./helper/adminapicall\";\nimport { isAuthenticated } from \"../auth/helper/index\";\nimport ProductForm from \"./components/ProductForm\";\nimport BackToDashboard from \"./components/BackToDashboard\";\nimport { handleToast } from \"../reusables/HandleToast\";\n\n// props.match.params.anyNameOfendPointUrl // as written in routes\n// match is by DEFAULT cannot be renamed\nconst UpdateProduct = ({ match }) => {\n  const { user, token } = isAuthenticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\",\n  });\n\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData,\n  } = values;\n\n  const preload = (productId) => {\n    getProduct(productId).then((data) => {\n      //console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        preloadCategories();\n        setValues({\n          ...values,\n          name: data.name,\n          description: data.description,\n          price: data.price,\n          category: data.category._id,\n          stock: data.stock,\n          formData: new FormData(),\n        });\n      }\n    });\n  };\n\n  const preloadCategories = () => {\n    getAllCategory().then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ categories: data, formData: new FormData() });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload(match.params.productId);\n  }, []);\n\n  //TODO: work on it\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    updateProduct(match.params.productId, user._id, token, formData).then(\n      (data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n          handleToast(false, data.error, \"error\");\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            description: \"\",\n            price: \"\",\n            photo: \"\",\n            stock: \"\",\n            loading: false,\n            createdProduct: data.name,\n          });\n          handleToast(false, \"updated successfully\", \"success\");\n        }\n      }\n    );\n  };\n\n  const handleChange = (name) => (event) => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h4>{createdProduct} created successfully</h4>\n    </div>\n  );\n\n  return (\n    <Base\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4\"\n    >\n      {/* <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link> */}\n      {BackToDashboard()}\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {ProductForm({\n            values: values,\n            categories: categories,\n            handleChange: handleChange,\n            onSubmit: onSubmit,\n          })}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateProduct;\n"]},"metadata":{},"sourceType":"module"}