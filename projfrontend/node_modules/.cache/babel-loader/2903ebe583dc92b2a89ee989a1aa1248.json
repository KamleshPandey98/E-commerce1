{"ast":null,"code":"import { toast } from \"react-toastify\";\nexport const handleToast = ({\n  boolsuccess,\n  errMsg,\n  errorType\n}) => {\n  toast.dismiss();\n  console.log(oast.TYPE.ERROR === errorType);\n\n  switch (true) {\n    case toast.TYPE.ERROR === errorType:\n      showErrorToast(boolsuccess, errMsg);\n      break;\n\n    case toast.TYPE.SUCCESS === errorType:\n      showSuccessToast(boolsuccess, errMsg);\n      break;\n\n    case toast.TYPE.WARNING === errorType:\n      showWarningToast(boolsuccess, errMsg);\n      break;\n\n    default:\n      break;\n  } //   if (boolsuccess) {\n  //     // toast.success(onSuccessLoginNavigate);\n  //   } else if (errMsg) {\n  //     toast.error(errMsg);\n  //   } else {\n  //     toast.error(\"error\");\n  //   }\n\n};\n\nconst showErrorToast = (boolSuccess, errMsg) => {\n  toast.error(errMsg);\n};\n\nconst showSuccessToast = (boolSuccess, errMsg) => {\n  toast.success(errMsg);\n};\n\nconst showWarningToast = (boolSuccess, errMsg) => {\n  toast.warning(errMsg);\n}; // class ToastTypes {\n//   static warning= \"warning\";\n// }","map":{"version":3,"sources":["/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/reusables/HandleToast.js"],"names":["toast","handleToast","boolsuccess","errMsg","errorType","dismiss","console","log","oast","TYPE","ERROR","showErrorToast","SUCCESS","showSuccessToast","WARNING","showWarningToast","boolSuccess","error","success","warning"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAAD,KAAwC;AACjEJ,EAAAA,KAAK,CAACK,OAAN;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,IAAL,CAAUC,KAAV,KAAoBN,SAAhC;;AACA,UAAQ,IAAR;AACE,SAAKJ,KAAK,CAACS,IAAN,CAAWC,KAAX,KAAqBN,SAA1B;AACEO,MAAAA,cAAc,CAACT,WAAD,EAAcC,MAAd,CAAd;AACA;;AACF,SAAKH,KAAK,CAACS,IAAN,CAAWG,OAAX,KAAuBR,SAA5B;AACES,MAAAA,gBAAgB,CAACX,WAAD,EAAcC,MAAd,CAAhB;AACA;;AACF,SAAKH,KAAK,CAACS,IAAN,CAAWK,OAAX,KAAuBV,SAA5B;AACEW,MAAAA,gBAAgB,CAACb,WAAD,EAAcC,MAAd,CAAhB;AACA;;AAEF;AACE;AAZJ,GAHiE,CAiBjE;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CAxBM;;AA0BP,MAAMQ,cAAc,GAAG,CAACK,WAAD,EAAcb,MAAd,KAAyB;AAC9CH,EAAAA,KAAK,CAACiB,KAAN,CAAYd,MAAZ;AACD,CAFD;;AAIA,MAAMU,gBAAgB,GAAG,CAACG,WAAD,EAAcb,MAAd,KAAyB;AAChDH,EAAAA,KAAK,CAACkB,OAAN,CAAcf,MAAd;AACD,CAFD;;AAIA,MAAMY,gBAAgB,GAAG,CAACC,WAAD,EAAcb,MAAd,KAAyB;AAChDH,EAAAA,KAAK,CAACmB,OAAN,CAAchB,MAAd;AACD,CAFD,C,CAIA;AACA;AACA","sourcesContent":["import { toast } from \"react-toastify\";\n\nexport const handleToast = ({ boolsuccess, errMsg, errorType }) => {\n  toast.dismiss();\n  console.log(oast.TYPE.ERROR === errorType);\n  switch (true) {\n    case toast.TYPE.ERROR === errorType:\n      showErrorToast(boolsuccess, errMsg);\n      break;\n    case toast.TYPE.SUCCESS === errorType:\n      showSuccessToast(boolsuccess, errMsg);\n      break;\n    case toast.TYPE.WARNING === errorType:\n      showWarningToast(boolsuccess, errMsg);\n      break;\n\n    default:\n      break;\n  }\n  //   if (boolsuccess) {\n  //     // toast.success(onSuccessLoginNavigate);\n  //   } else if (errMsg) {\n  //     toast.error(errMsg);\n  //   } else {\n  //     toast.error(\"error\");\n  //   }\n};\n\nconst showErrorToast = (boolSuccess, errMsg) => {\n  toast.error(errMsg);\n};\n\nconst showSuccessToast = (boolSuccess, errMsg) => {\n  toast.success(errMsg);\n};\n\nconst showWarningToast = (boolSuccess, errMsg) => {\n  toast.warning(errMsg);\n};\n\n// class ToastTypes {\n//   static warning= \"warning\";\n// }\n"]},"metadata":{},"sourceType":"module"}