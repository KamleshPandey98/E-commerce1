{"ast":null,"code":"import { API, cPrint } from \"../../backend\"; // Category Calls\n\nexport const createCategory = async (userId, token, categoryName) => {\n  return await fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(categoryName)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    cPrint(`error: ${err}`);\n  });\n};\nexport const getAllCategory = async () => {\n  return await fetch(`${API}/categories`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    cPrint(`error: ${err}`);\n  });\n};\nexport const updateCategory = async (name, categId, userId, token) => {\n  return await fetch(`${API}/category/${categId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    cPrint(`error: ${err}`);\n  });\n};\nexport const deleteCategory = async (categId, userId, token) => {\n  return await fetch(`${API}/category/${categId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    cPrint(`error: ${err}`);\n  });\n}; // TODO:  Product Calls\n//create a product\n\nexport const createaProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all products\n\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //delete a product\n\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get a product\n\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //update a product\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/admin/helper/adminapicall.js"],"names":["API","cPrint","createCategory","userId","token","categoryName","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","getAllCategory","updateCategory","name","categId","deleteCategory","createaProduct","product","console","log","getProducts","deleteProduct","productId","getProduct","updateProduct"],"mappings":"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","sourcesContent":["import { API, cPrint } from \"../../backend\";\n\n// Category Calls\nexport const createCategory = async (userId, token, categoryName) => {\n  return await fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(categoryName),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      cPrint(`error: ${err}`);\n    });\n};\n\nexport const getAllCategory = async () => {\n  return await fetch(`${API}/categories`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      cPrint(`error: ${err}`);\n    });\n};\n\nexport const updateCategory = async (name, categId, userId, token) => {\n  return await fetch(`${API}/category/${categId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ name }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      cPrint(`error: ${err}`);\n    });\n};\n\nexport const deleteCategory = async (categId, userId, token) => {\n  return await fetch(`${API}/category/${categId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      cPrint(`error: ${err}`);\n    });\n};\n\n// TODO:  Product Calls\n\n//create a product\nexport const createaProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: product,\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//get all products\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\",\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//delete a product\n\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//get a product\n\nexport const getProduct = (productId) => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\",\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//update a product\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: product,\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}