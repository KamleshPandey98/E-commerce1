{"ast":null,"code":"import { API, cPrint } from \"../../backend\";\nexport const signup = async user => {\n  // cPrint(JSON.stringify(user));\n  try {\n    const response = await fetch(`${API}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }); // cPrint(await response.json());\n\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const signin = async user => {\n  cPrint(JSON.stringify(user));\n\n  try {\n    const response = await fetch(`${API}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== undefined) {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\nexport const signout = async next => {\n  if (typeof window !== undefined) {\n    localStorage.removeItem(\"jwt\");\n    next();\n\n    try {\n      await fetch(`${API}/signout`, {\n        method: \"GET\"\n      });\n    } catch (err) {\n      return console.log(err);\n    }\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == undefined) {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/kamlesh.pandey/Personal/MERN Proj/projfrontend/src/auth/helper/index.js"],"names":["API","cPrint","signup","user","response","fetch","method","headers","Accept","body","JSON","stringify","json","err","console","log","signin","authenticate","data","next","window","undefined","localStorage","setItem","signout","removeItem","isAuthenticated","getItem","parse"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,eAA5B;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAOC,IAAP,IAAgB;AACpC;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,GAAI,SAAR,EAAkB;AAC5CM,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFmC;AAM5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AANsC,KAAlB,CAA5B,CADE,CASF;;AACA,WAAO,MAAMC,QAAQ,CAACQ,IAAT,EAAb;AACD,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAhBM;AAkBP,OAAO,MAAMG,MAAM,GAAG,MAAOb,IAAP,IAAgB;AACpCF,EAAAA,MAAM,CAACS,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAD,CAAN;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,GAAI,SAAR,EAAkB;AAC5CM,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFmC;AAM5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AANsC,KAAlB,CAA5B;AAQA,WAAO,MAAMC,QAAQ,CAACQ,IAAT,EAAb;AACD,GAVD,CAUE,OAAOC,GAAP,EAAY;AACZ,WAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACD;AACF,CAfM;AAiBP,OAAO,MAAMI,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC1C,MAAI,OAAOC,MAAP,KAAkBC,SAAtB,EAAiC;AAC/BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4Bb,IAAI,CAACC,SAAL,CAAeO,IAAf,CAA5B;AACAC,IAAAA,IAAI;AACL;AACF,CALM;AAOP,OAAO,MAAMK,OAAO,GAAG,MAAOL,IAAP,IAAgB;AACrC,MAAI,OAAOC,MAAP,KAAkBC,SAAtB,EAAiC;AAC/BC,IAAAA,YAAY,CAACG,UAAb,CAAwB,KAAxB;AACAN,IAAAA,IAAI;;AAEJ,QAAI;AACF,YAAMd,KAAK,CAAE,GAAEL,GAAI,UAAR,EAAmB;AAC5BM,QAAAA,MAAM,EAAE;AADoB,OAAnB,CAAX;AAGD,KAJD,CAIE,OAAOO,GAAP,EAAY;AACZ,aAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACD;AACF;AACF,CAbM;AAeP,OAAO,MAAMa,eAAe,GAAG,MAAM;AACnC,MAAI,OAAON,MAAP,IAAiBC,SAArB,EAAgC;AAC9B,WAAO,KAAP;AACD;;AACD,MAAIC,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,WAAOjB,IAAI,CAACkB,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CATM","sourcesContent":["import { API, cPrint } from \"../../backend\";\n\nexport const signup = async (user) => {\n  // cPrint(JSON.stringify(user));\n  try {\n    const response = await fetch(`${API}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n    // cPrint(await response.json());\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const signin = async (user) => {\n  cPrint(JSON.stringify(user));\n  try {\n    const response = await fetch(`${API}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n    return await response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport const authenticate = (data, next) => {\n  if (typeof window !== undefined) {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\n\nexport const signout = async (next) => {\n  if (typeof window !== undefined) {\n    localStorage.removeItem(\"jwt\");\n    next();\n\n    try {\n      await fetch(`${API}/signout`, {\n        method: \"GET\",\n      });\n    } catch (err) {\n      return console.log(err);\n    }\n  }\n};\n\nexport const isAuthenticated = () => {\n  if (typeof window == undefined) {\n    return false;\n  }\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}